% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/velocity_methods.R
\docType{methods}
\name{get_velocity_files}
\alias{get_velocity_files}
\alias{get_velocity_files,GRanges-method}
\alias{get_velocity_files,character-method}
\alias{get_velocity_files,TxDb-method}
\title{Get files required for RNA velocity with bustools}
\usage{
get_velocity_files(X, L, genome, transcriptome, out_path,
  short_exon_action = c("truncate", "include"),
  isoform_action = c("separate", "collapse"), ...)

\S4method{get_velocity_files}{GRanges}(X, L, genome, transcriptome,
  out_path, short_exon_action = c("truncate", "include"),
  isoform_action = c("separate", "collapse"),
  transcript_id = "transcript_id", gene_id = "gene_id",
  transcript_version = "transcript_version",
  gene_version = "gene_version", version_sep = ".",
  exon_number = "exon_number", exon_id = "exon_id")

\S4method{get_velocity_files}{character}(X, L, genome, transcriptome,
  out_path, short_exon_action = c("truncate", "include"),
  isoform_action = c("separate", "collapse"),
  transcript_id = "transcript_id", gene_id = "gene_id",
  transcript_version = "transcript_version",
  gene_version = "gene_version", version_sep = ".",
  exon_number = "exon_number", exon_id = "exon_id")

\S4method{get_velocity_files}{TxDb}(X, L, genome, transcriptome, out_path,
  short_exon_action = c("truncate", "include"),
  isoform_action = c("separate", "collapse"))
}
\arguments{
\item{X}{Gene annotation with transcript and exon information. It can be a
path to a GTF file with annotation of exon coordinates of
transcripts, preferably from Ensembl. The file must be formatted as in Ensembl.
In the metadata, the following fields are required: type (e.g. whether the
range of interest is a gene or transcript or exon or CDS), gene ID,
transcript ID, and exon number. These fields need not to have standard names,
as long as their names are specified in arguments of this function. It can
also be a \code{\link{TxDb}} object, such as from the Bioconductor package
\code{TxDb.Hsapiens.UCSC.hg38.knownGene}.}

\item{L}{Length of the biological read. For instance, 10xv1: 98 nt,
10xv2: 98 nt, 10xv3: 91 nt, Drop-seq: 50 nt. If in doubt check read length
in a fastq file for biological reads with the \code{bash} commands:
If the fastq file is gzipped, then do \code{zcat your_file.fastq.gz | head} on
Linux. If on Mac, then \code{zcat < your_file.fastq.gz | head}. Then you will see
lines with nucleotide bases. Copy one of those lines and determine its length
with \code{\link{str_length}} in R or \code{echo -n <the sequence> | wc -c} in
\code{bash}. Which file corresponds to biological reads depends on the particular
technology.}

\item{genome}{Either a \code{\link{BSgenome}} or a \code{\link{XStringSet}}
object of genomic sequences, where the intronic sequences will be extracted
from. Naming convention of chromosomes in the genome must match that in the
annotation, e.g. consistently use 1 for chromosome 1 or consistently use chr1.}

\item{transcriptome}{Either a \code{\link{XStringSet}} or a path to a fasta
file (can be gzipped) of the transcriptome, which contains sequences of
spliced transcripts. This will be concatenated with the intronic sequences
to give one fasta file. The type of transcript ID in the transcriptome must
match that in the gene annotation supplied via argumennt \code{X}. When \code{X} is a
\code{TxDb} object, check the column \code{TXNAME} rather than \code{TXID}. For the
exported function \code{\link{get_velocity_files}}, this argument can be
missing. If it is missing, then the transriptome sequences will be extracted
from the genome given the gene annotation.}

\item{out_path}{Directory to save the outputs written to disk. If this
directory does not exist, then it will be created.}

\item{short_exon_action}{Character, indicating action to take with exons
that are shorter than L-1. Must be one of the following:
\describe{
\item{truncate}{The flanking region involving this exon will be truncated;
the entire exon will be included in the flanking region, but not the intron
on the other side of this exon.}
\item{include}{The short exon will be included as part of the intronic
sequence between the surrounding exons. Note that if the short exon is the
first or the last exon of the transcript, then the flanking region in this
exon will always be truncated to not include intergenic regions.}
}}

\item{isoform_action}{Character, indicating action to take with different
transcripts of the same gene. Must be one of the following:
\describe{
\item{separate}{Introns from different transcripts will be kept separate.}
\item{collapse}{First, the union of all exons of different transcripts of a
gene will be taken. Then the introns will be inferred from this union.}
}}

\item{\dots}{Extra parameters for methods.}

\item{transcript_id}{Character vector of length 1. Tag in \code{attribute}
field corresponding to transcript IDs. This argument must be supplied and
cannot be \code{NA} or \code{NULL}. Will throw error if tag indicated in this
argument does not exist.}

\item{gene_id}{Character vector of length 1. Tag in \code{attribute}
field corresponding to gene IDs. This argument must be supplied and
cannot be \code{NA} or \code{NULL}. Note that this is different from gene
symbols, which do not have to be unique. This can be Ensembl or Entrez IDs.
However, if the gene symbols are in fact unique for each gene, you may
supply the tag for human readable gene symbols to this argument. Will throw
error if tag indicated in this argument does not exist.}

\item{transcript_version}{Character vector of length 1. Tag in \code{attribute}
field corresponding to \emph{transcript} version number. If your GTF file does not
include transcript version numbers, or if you do not wish to include the
version number, then use \code{NULL} for this argument. To decide whether to
include transcript version number, check whether version numbers are included
in the \code{transcripts.txt} in the \code{kallisto} output directory. If that file
includes version numbers, then trannscript version numbers must be included
here as well. If that file does not include version numbers, then transcript
version numbers must not be included here.}

\item{gene_version}{Character vector of length 1. Tag in \code{attribute}
field corresponding to \emph{gene} version number. If your GTF file does not
include gene version numbers, or if you do not wish to include the
version number, then use \code{NULL} for this argument. Unlike transcript
version number, it's up to you whether to include gene version number.}

\item{version_sep}{Character to separate bewteen the main ID and the version
number. Defaults to ".", as in Ensembl.}

\item{exon_number}{Character vector of length 1. Tag in \code{attribute}
field corresponding to exon numbers, namely the order of exons from 5' to 3'
on the transcript. Must be coercable to integer.}

\item{exon_id}{Character vector of length 1. Tag in \code{attribute}
field corresponding to exon ID. If the specified tag does not exist in the
GTF file, then a new metadata column that can uniquely identify exons will
be created.}
}
\value{
The following files will be written to disk in the directory
\code{out_path}:
\describe{
\item{cDNA_introns.fa}{A fasta file containing both the spliced transcripts
and the flanked intronic sequences. This will be used to build the \code{kallisto}
index.}
\item{cDNA_tx_to_capture.txt}{A text file of transcript IDs of spliced
transcripts.}
\item{introns_tx_to_capture.txt}{A text file of IDs of introns. The names
will have the pattern <transcript ID>-Ix, where x is a number differentiating
between introns of the same transcript. If all transcripts of the same gene
are collapsed before inferring intronic sequences, gene ID will be used in
place of transcript ID.}
\item{tr2g.txt}{A text file with two columns matching transcripts and introns
to genes. The first column is transcript or intron ID, and the second column
is the corresponding gene ID. The part for transcripts are generated from
the GTF file.}
}
Nothing is returned into the R session.
}
\description{
Computation of RNA velocity requires the number of unspliced transcripts,
which can be quantified with reads containing intronic sequences. This
function extracts intronic sequences flanked by L-1 bases of exonic sequences
where L is the biological read length of the single cell technology of
interest. The flanking exonic sequences are included for reads partially
mapping to an intron and an exon.
}
\examples{
# Use toy example
toy_path <- system.file("testdata", package = "BUSpaRse")
file <- paste0(toy_path, "/velocity_annot.gtf")
genome <- Biostrings::readDNAStringSet(paste0(toy_path, "/velocity_genome.fa"))
transcriptome <- paste0(toy_path, "/velocity_tx.fa")
get_velocity_files(file, 11, genome, transcriptome, ".",
                   gene_version = NULL, transcript_version = NULL)
}
