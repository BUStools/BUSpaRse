% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tr2g.R
\name{tr2g_gff3}
\alias{tr2g_gff3}
\title{Get transcript and gene info from GFF3 file}
\usage{
tr2g_gff3(
  file,
  type_use = "mRNA",
  transcript_id = "transcript_id",
  gene_id = "gene_id",
  gene_name = "Name",
  transcript_version = "version",
  gene_version = "version",
  version_sep = ".",
  transcript_biotype_col = "biotype",
  gene_biotype_col = "biotype",
  transcript_biotype_use = "all",
  gene_biotype_use = "all",
  chrs_only = TRUE,
  source = c("ensembl", "refseq"),
  save_filtered = FALSE,
  file_save = "gff_filtered.gff"
)
}
\arguments{
\item{file}{Path to a GTF file to be read. The file can remain gzipped.}

\item{type_use}{Character vector, the values taken by the \code{type} field
in the GTF file that denote the desired transcripts. This can be "exon",
"transcript", "mRNA", and etc.}

\item{transcript_id}{Character vector of length 1. Tag in \code{attribute}
field corresponding to transcript IDs. This argument must be supplied and
cannot be \code{NA} or \code{NULL}. Will throw error if tag indicated in this
argument does not exist.}

\item{gene_id}{Character vector of length 1. Tag in \code{attribute}
field corresponding to gene IDs. This argument must be supplied and
cannot be \code{NA} or \code{NULL}. Note that this is different from gene
symbols, which do not have to be unique. This can be Ensembl or Entrez IDs.
However, if the gene symbols are in fact unique for each gene, you may
supply the tag for human readable gene symbols to this argument. Will throw
error if tag indicated in this argument does not exist.}

\item{gene_name}{Character vector of length 1. Tag in \code{attribute}
field corresponding to gene symbols. This argument can be \code{NA} or
\code{NULL} if you are fine with non-human readable gene IDs and do not wish
to extract human readable gene symbols.}

\item{transcript_version}{Character vector of length 1. Tag in \code{attribute}
field corresponding to \emph{transcript} version number. If your GTF file does not
include transcript version numbers, or if you do not wish to include the
version number, then use \code{NULL} for this argument. To decide whether to
include transcript version number, check whether version numbers are included
in the \code{transcripts.txt} in the \code{kallisto} output directory. If that file
includes version numbers, then trannscript version numbers must be included
here as well. If that file does not include version numbers, then transcript
version numbers must not be included here.}

\item{gene_version}{Character vector of length 1. Tag in \code{attribute}
field corresponding to \emph{gene} version number. If your GTF file does not
include gene version numbers, or if you do not wish to include the
version number, then use \code{NULL} for this argument. Unlike transcript
version number, it's up to you whether to include gene version number.}

\item{version_sep}{Character to separate bewteen the main ID and the version
number. Defaults to ".", as in Ensembl.}

\item{transcript_biotype_col}{Character vector of length 1. Tag in \code{attribute}
field corresponding to \emph{transcript} biotype.}

\item{gene_biotype_col}{Character vector of length 1. Tag in \code{attribute}
field corresponding to \emph{gene} biotype.}

\item{transcript_biotype_use}{Character, can be "all", "cellranger", or
a vector of \emph{transcript} biotypes to be used. Transcript biotypes aren't
entirely the same as gene biotypes. For instance, in Ensembl annotation,
\code{retained_intron} is a transcript biotype, but not a gene biotype. If
"cellranger", then the biotypes used by Cell Ranger's reference are used:
\code{c("protein_coding", "lincRNA", "antisense", "IG_LV_gene", "IG_V_gene",  "IG_V_pseudogene", "IG_D_gene", "IG_J_gene", "IG_J_pseudogene", "IG_C_gene",  "IG_C_pseudogene", "TR_V_gene", "TR_V_pseudogene", "TR_D_gene", "TR_J_gene",  "TR_J_pseudogene", "TR_C_gene")}.}

\item{gene_biotype_use}{Character, can be "all", "cellranger", or
a vector of \emph{gene} biotypes to be used. If
"cellranger", then the biotypes used by Cell Ranger's reference are used.}

\item{chrs_only}{Logical, whether to include chromosomes only, for GTF and
GFF files can contain annotations for scaffolds, which are not incorporated
into chromosomes. This will also exclude haplotypes. Defaults to \code{TRUE}.}

\item{source}{Name of the database where this GFF3 file was downloaded. Must
be either "ensembl" or "refseq".}

\item{save_filtered}{Logical. If filtering type, biotypes, and/or
chromosomes, whether to save the filtered \code{GRanges} as a GTF/GFF3 file.}

\item{file_save}{File name of the file to be saved. The directory in which
the file is to be saved must exist.}
}
\value{
A data frame at least 2 columns: \code{gene} for gene ID,
\code{transcript} for transcript ID, and optionally, \code{gene_name} for
gene names.
}
\description{
This function reads a GFF3 file and extracts the transcript ID and
corresponding gene ID. This function assumes that the GFF3 file is properly
formatted. See \url{http://gmod.org/wiki/GFF3} for a detailed
description of proper GFF3 format. Note that GTF files have a somewhat
different and simpler format in the attribute field, which this function does
not support. See \url{http://mblab.wustl.edu/GTF2.html} for a detailed
description of proper GTF format. To extract transcript and gene information
from GTF files, see the function \code{\link{tr2g_gtf}} in this package.
Some files bearing the \code{.gff3} are in fact more like the GTF format. If
this is so, then change the extension to \code{.gtf} and use the function
\code{\link{tr2g_gtf}} in this package instead.
}
\details{
Transcript and gene versions may not be present in all GTF files, so these
arguments are optional. This function has arguments for transcript and gene
version numbers because Ensembl IDs have version numbers. For Ensembl IDs, we
recommend including the version number, since a change in version number
signals a change in the entity referred to by the ID after reannotation. If a
version is used, then it will be appended to the ID, separated by
\code{version_sep}.

The transcript and gene IDs are The \code{attribute} field (the last
field) of GTF files can be complicated and inconsistent across different
sources. Please check the \code{attribute} tags in your GTF file and consider
the arguments of this function carefully. The defaults are set according to
Ensembl GTF files; defaults may not work for files from other sources. Due to
the general lack of standards for the \code{attribute} field, you may need to
further clean up the output of this function.
}
\examples{
toy_path <- system.file("testdata", package = "BUSpaRse")
file_use <- paste(toy_path, "gff3_test.gff3", sep = "/")
# Default
tr2g <- tr2g_gff3(file = file_use, verbose = FALSE)
# Excluding version numbers
tr2g <- tr2g_gff3(file = file_use, transcript_version = NULL,
  gene_version = NULL)
}
\seealso{
Other functions to retrieve transcript and gene info: 
\code{\link{sort_tr2g}()},
\code{\link{tr2g_EnsDb}()},
\code{\link{tr2g_TxDb}()},
\code{\link{tr2g_ensembl}()},
\code{\link{tr2g_fasta}()},
\code{\link{tr2g_gtf}()},
\code{\link{transcript2gene}()}
}
\concept{functions to retrieve transcript and gene info}
