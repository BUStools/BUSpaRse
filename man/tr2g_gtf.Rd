% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tr2g.R
\name{tr2g_gtf}
\alias{tr2g_gtf}
\title{Get transcript and gene info from GTF file}
\usage{
tr2g_gtf(file, type_use = "exon", transcript_id = "transcript_id",
  gene_id = "gene_id", gene_name = "gene_name",
  transcript_version = "transcript_version",
  gene_version = "gene_version", version_sep = ".", verbose = TRUE,
  cache = TRUE)
}
\arguments{
\item{file}{Path to a GTF file to be read. The file can remain gzipped.}

\item{type_use}{Character vector, the values taken by the \code{type} field
in the GTF file that denote the desired transcripts. This can be "exon",
"transcript", "mRNA", and etc.}

\item{transcript_id}{Character vector of length 1. Tag in \code{attribute}
field corresponding to transcript IDs. This argument must be supplied and
cannot be \code{NA} or \code{NULL}. Will throw error if tag indicated in this
argument does not exist.}

\item{gene_id}{Character vector of length 1. Tag in \code{attribute}
field corresponding to gene IDs. This argument must be supplied and
cannot be \code{NA} or \code{NULL}. Note that this is different from gene
symbols, which do not have to be unique. This can be Ensembl or Entrez IDs.
However, if the gene symbols are in fact unique for each gene, you may
supply the tag for human readable gene symbols to this argument. Will throw
error if tag indicated in this argument does not exist.}

\item{gene_name}{Character vector of length 1. Tag in \code{attribute}
field corresponding to gene symbols. This argument can be \code{NA} or
\code{NULL} if you are fine with non-human readable gene IDs.}

\item{transcript_version}{Character vector of length 1. Tag in \code{attribute}
field corresponding to \emph{transcript} version number. If your GTF file does not
include transcript version numbers, or if you do not wish to include the
version number, then use \code{NULL} for this argument.}

\item{gene_version}{Character vector of length 1. Tag in \code{attribute}
field corresponding to \emph{gene} version number. If your GTF file does not
include gene version numbers, or if you do not wish to include the
version number, then use \code{NULL} for this argument.}

\item{version_sep}{Character to separate bewteen the main ID and the version
number. Defaults to ".", as in Ensembl.}

\item{verbose}{Whether to display progress.}

\item{cache}{Logical, whether to cache results, defaults to \code{TRUE}.}
}
\value{
A data frame with 3 columns: \code{gene} for gene ID, \code{transcript}
for transcript ID, and \code{gene_name} for gene names.
}
\description{
This function reads a GTF file and extracts the transcript ID and
corresponding gene ID. The memoised version of this function is exported
since reading large gtf files can take a while.
}
\details{
Transcript and gene versions may not be present in all GTF files, so these
arguments are optional. This function has arguments for transcript and gene
version numbers because Ensembl IDs have version numbers. For Ensembl IDs, we
recommend including the version number, since a change in version number
signals a change in the entity referred to by the ID after reannotation.
}
\note{
The transcript and gene IDs are The \code{attribute} field (the last
field) of GTF files can be complicated and inconsistent across different
sources. Please check the \code{attribute} tags in your GTF file and consider
the arguments of this function carefully. The defaults are set according to
Ensembl GTF files; defaults may not work for files from other sources.
}
\seealso{
\code{\link{tr2g_ensembl}} \code{\link{tr2g_fasta}} \code{\link{transcript2gene}}

Other functions to retrieve transcript and gene info: \code{\link{tr2g_ensembl}},
  \code{\link{tr2g_fasta}}, \code{\link{transcript2gene}}
}
\concept{functions to retrieve transcript and gene info}
